{#- baml_py must be imported to enable access to baml_py.Image -#}
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, List, Optional, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

{# Partial classes (used for streaming) -#}
{% for cls in partial_classes %}
class {{cls.name}}(BaseModel):
    {%- if let Some(docstring) = cls.docstring %}
    {{docstring}}
    {%- endif %}
    {%- if cls.dynamic %}
    model_config = ConfigDict(extra='allow')
    {%- endif %}
    {%- if cls.fields.is_empty() && !cls.dynamic %}pass{% endif %}
    
    {%- for (name, partial_type, m_docstring) in cls.fields %}
    {{name}}: {{partial_type}}
    {%- if let Some(docstring) = m_docstring %}
    {{ docstring }}
    {%- endif %}
    {%- endfor %}
{% endfor %}
