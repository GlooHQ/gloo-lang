name: BAML Runtime

on:
  pull_request:
    branches:
      - canary
  push:
    paths:
      - "engine/**"
      - ".github/workflows/primary.yml"
    branches:
      - canary
  # need to run this periodically on the default branch to populate the build cache
  schedule:
    # daily at 2am PST
    - cron: 0 10 * * *
  merge_group:
    types: [checks_requested]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  repository-projects: read

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.6
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            typescript/**/pnpm-lock.yaml
      - name: Install Node
        run: pnpm install --frozen-lockfile
        working-directory: typescript
      - name: Check TS Lint
        run: pnpm biome ci . --organize-imports-enabled=false
        working-directory: typescript

  test-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            engine/language_client_typescript/pnpm-lock.yaml
            integ-tests/typescript/pnpm-lock.yaml
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      # Build TypeScript client
      - name: Build TypeScript Client
        run: |
          cd engine/language_client_typescript
          pnpm install --frozen-lockfile
          pnpm build:debug
      # Generate and test
      - name: Generate and Test TypeScript
        run: |
          cd integ-tests/typescript
          pnpm install --frozen-lockfile
          pnpm generate
          pnpm integ-tests:dotenv
      - name: Verify No Changes
        run: git diff --exit-code

  test-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      - name: Run Rust Tests
        run: cargo test --lib
        working-directory: engine
      # WASM tests
      - name: Setup WASM Target
        run: rustup target add wasm32-unknown-unknown
      - name: Build WASM
        run: cargo build --target=wasm32-unknown-unknown
        working-directory: engine/baml-schema-wasm

  test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'poetry'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Run Python Integration Tests
        run: |
          cd integ-tests/python
          poetry install
          poetry run maturin develop --manifest-path ../../engine/language_client_python/Cargo.toml
          poetry run baml-cli generate --from ../baml_src
          poetry run pytest
      - name: Verify No Changes
        run: git diff --exit-code

  test-ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Run Ruby Integration Tests
        run: |
          cd integ-tests/ruby
          bundle install
          rake generate
          rake test
      - name: Verify No Changes
        run: git diff --exit-code
